"use strict";
exports.__esModule = true;
var commander = require("commander");
var path = require("path");
var fs = require("fs");
var tplgen = require("./");
var version = require('../package.json').version;
commander.version(version)
    .option('-t, --tplDir <string>', 'template directory path')
    .option('-o, --outDir <string>', 'output path', './')
    .option('-c, --configFile <string>', 'config file')
    .parse(process.argv);
if (!commander.tplDir) {
    console.error("error: required option '-t, --tplDir <string>' not specified");
    commander.help();
}
var tplDir = path.resolve('./', commander.tplDir);
var outDir = path.resolve('./', commander.outDir);
var context = {};
if (commander.configFile) {
    var configFile = path.resolve('./', commander.configFile);
    context = JSON.parse(fs.readFileSync(configFile, 'utf8'));
}
tplgen({ templateDir: tplDir, outDir: outDir, context: context });

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNtZGxpbmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxxQ0FBdUM7QUFDdkMsMkJBQTZCO0FBQzdCLHVCQUF5QjtBQUV6QiwyQkFBOEI7QUFFOUIsSUFBTSxPQUFPLEdBQUcsT0FBTyxDQUFDLGlCQUFpQixDQUFDLENBQUMsT0FBTyxDQUFDO0FBRW5ELFNBQVMsQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDO0tBQ3JCLE1BQU0sQ0FBQyx1QkFBdUIsRUFBRSx5QkFBeUIsQ0FBQztLQUMxRCxNQUFNLENBQUMsdUJBQXVCLEVBQUUsYUFBYSxFQUFFLElBQUksQ0FBQztLQUNwRCxNQUFNLENBQUMsMkJBQTJCLEVBQUUsYUFBYSxDQUFDO0tBQ2xELEtBQUssQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUM7QUFFekIsSUFBSSxDQUFDLFNBQVMsQ0FBQyxNQUFNLEVBQUU7SUFDbkIsT0FBTyxDQUFDLEtBQUssQ0FBQyw4REFBOEQsQ0FBQyxDQUFDO0lBQzlFLFNBQVMsQ0FBQyxJQUFJLEVBQUUsQ0FBQztDQUNwQjtBQUVELElBQU0sTUFBTSxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxFQUFFLFNBQVMsQ0FBQyxNQUFNLENBQUMsQ0FBQztBQUNwRCxJQUFNLE1BQU0sR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksRUFBRSxTQUFTLENBQUMsTUFBTSxDQUFDLENBQUM7QUFFcEQsSUFBSSxPQUFPLEdBQUcsRUFBRSxDQUFDO0FBQ2pCLElBQUksU0FBUyxDQUFDLFVBQVUsRUFBRTtJQUN0QixJQUFNLFVBQVUsR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksRUFBRSxTQUFTLENBQUMsVUFBVSxDQUFDLENBQUM7SUFDNUQsT0FBTyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsRUFBRSxDQUFDLFlBQVksQ0FBQyxVQUFVLEVBQUUsTUFBTSxDQUFDLENBQUMsQ0FBQztDQUM3RDtBQUVELE1BQU0sQ0FBQyxFQUFFLFdBQVcsRUFBRSxNQUFNLEVBQUUsTUFBTSxRQUFBLEVBQUUsT0FBTyxTQUFBLEVBQUUsQ0FBQyxDQUFDIiwiZmlsZSI6ImNtZGxpbmUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBjb21tYW5kZXIgZnJvbSAnY29tbWFuZGVyJztcbmltcG9ydCAqIGFzIHBhdGggZnJvbSAncGF0aCc7XG5pbXBvcnQgKiBhcyBmcyBmcm9tICdmcyc7XG5cbmltcG9ydCB0cGxnZW4gPSByZXF1aXJlKCcuLycpO1xuXG5jb25zdCB2ZXJzaW9uID0gcmVxdWlyZSgnLi4vcGFja2FnZS5qc29uJykudmVyc2lvbjtcblxuY29tbWFuZGVyLnZlcnNpb24odmVyc2lvbilcbiAgICAub3B0aW9uKCctdCwgLS10cGxEaXIgPHN0cmluZz4nLCAndGVtcGxhdGUgZGlyZWN0b3J5IHBhdGgnKVxuICAgIC5vcHRpb24oJy1vLCAtLW91dERpciA8c3RyaW5nPicsICdvdXRwdXQgcGF0aCcsICcuLycpXG4gICAgLm9wdGlvbignLWMsIC0tY29uZmlnRmlsZSA8c3RyaW5nPicsICdjb25maWcgZmlsZScpXG4gICAgLnBhcnNlKHByb2Nlc3MuYXJndik7XG5cbmlmICghY29tbWFuZGVyLnRwbERpcikge1xuICAgIGNvbnNvbGUuZXJyb3IoYGVycm9yOiByZXF1aXJlZCBvcHRpb24gJy10LCAtLXRwbERpciA8c3RyaW5nPicgbm90IHNwZWNpZmllZGApO1xuICAgIGNvbW1hbmRlci5oZWxwKCk7XG59XG5cbmNvbnN0IHRwbERpciA9IHBhdGgucmVzb2x2ZSgnLi8nLCBjb21tYW5kZXIudHBsRGlyKTtcbmNvbnN0IG91dERpciA9IHBhdGgucmVzb2x2ZSgnLi8nLCBjb21tYW5kZXIub3V0RGlyKTtcblxubGV0IGNvbnRleHQgPSB7fTtcbmlmIChjb21tYW5kZXIuY29uZmlnRmlsZSkge1xuICAgIGNvbnN0IGNvbmZpZ0ZpbGUgPSBwYXRoLnJlc29sdmUoJy4vJywgY29tbWFuZGVyLmNvbmZpZ0ZpbGUpO1xuICAgIGNvbnRleHQgPSBKU09OLnBhcnNlKGZzLnJlYWRGaWxlU3luYyhjb25maWdGaWxlLCAndXRmOCcpKTtcbn1cblxudHBsZ2VuKHsgdGVtcGxhdGVEaXI6IHRwbERpciwgb3V0RGlyLCBjb250ZXh0IH0pO1xuIl19
